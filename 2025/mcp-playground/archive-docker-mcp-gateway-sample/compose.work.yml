version: '3.8'

services:
  # Work MCP Gateway (メインゲートウェイ)
  work-mcp-gateway:
    image: docker/mcp-gateway:latest
    container_name: work-mcp-gateway
    ports:
      - "8080:8080"  # 仕事用ポート
    volumes:
      - ~/.docker/mcp:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
      - work-logs:/var/log/mcp
    environment:
      - MCP_CONFIG_PATH=/app/config/work-gateway-config.yaml
      - MCP_TRANSPORT=stdio
      - MCP_ENVIRONMENT=work
      - NODE_ENV=production
    command: ["docker", "mcp", "gateway", "run", "--config", "/app/config/work-gateway-config.yaml"]
    networks:
      - work-mcp-network
    restart: unless-stopped
    depends_on:
      - github-work-mcp
      - slack-work-mcp
    labels:
      - "mcp.environment=work"
      - "mcp.type=gateway"

  # Work GitHub MCP Server
  github-work-mcp:
    build:
      context: ./containers/github
    container_name: github-work-mcp-server
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_WORK_PAT}
      - NODE_ENV=production
      - MCP_ENVIRONMENT=work
    networks:
      - work-mcp-network
    restart: unless-stopped
    labels:
      - "mcp.environment=work"
      - "mcp.service=github"

  # Work Slack MCP Server  
  slack-work-mcp:
    build:
      context: ./containers/slack
    container_name: slack-work-mcp-server
    environment:
      - SLACK_TEAM_ID=${SLACK_WORK_TEAM_ID}
      - SLACK_CHANNEL_IDS=${SLACK_WORK_CHANNEL_IDS}
      - NODE_ENV=production
      - MCP_ENVIRONMENT=work
    networks:
      - work-mcp-network
    restart: unless-stopped
    labels:
      - "mcp.environment=work"
      - "mcp.service=slack"

networks:
  work-mcp-network:
    driver: bridge
    name: work-mcp-network
    labels:
      - "mcp.environment=work"

volumes:
  work-logs:
    driver: local
    name: work-mcp-logs
